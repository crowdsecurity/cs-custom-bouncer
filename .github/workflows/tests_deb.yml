name: Test .deb packaging

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  build:
    name: "Test .deb packages"
    runs-on: ubuntu-latest

    steps:

    - name: Check out code into the Go module directory
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
      with:
        go-version-file: go.mod

    - name: Install uv
      uses: astral-sh/setup-uv@3259c6206f993105e3a61b142c2d97bf4b9ef83d # v7.1.0
      with:
        version: 0.5.24
        enable-cache: true
        cache-dependency-glob: "test/uv.lock"

    - name: "Set up Python"
      uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
      with:
        python-version-file: "test/.python-version"

    - name: Install the project
      run: uv sync --all-extras --dev
      working-directory: ./test

    - name: Install functional test dependencies
      run: |
        sudo apt update
        sudo apt install -y build-essential debhelper devscripts fakeroot lintian
        docker network create net-test

    - name: Run functional tests
      env:
        CROWDSEC_TEST_VERSION: dev
        CROWDSEC_TEST_FLAVORS: full
        CROWDSEC_TEST_NETWORK: net-test
        CROWDSEC_TEST_TIMEOUT: 60
        PYTEST_ADDOPTS: --durations=0 -vv --color=yes
      working-directory: ./test
      run: |
        uv run pytest ./tests/pkg/test_build_deb.py
        sudo -E $(which uv) run pytest -m deb ./tests/install/no_crowdsec
